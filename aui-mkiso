#!/bin/bash

set -e -u

confdir=/usr/share/archiso/configs
config=
options=

_usage () {
        echo
        echo 'aui-mkiso, Live ISO image build.'
        echo
        echo 'Command synopsis:'
        echo 'aui-mkiso <iso config> [options] [build options]'
        echo
        echo 'To get help run:'
        echo 'aui-mkiso --help'
        echo
        exit ${1}
}

_help () {
        echo
        echo 'Archuseriso tool for building a custom Arch Linux Live ISO image.'
        echo
        echo 'Command synopsis:'
        echo 'aui-mkiso <iso config> [options] [build options]'
        echo
        echo 'Options:'
        echo '-h, --help                        Command help'
        echo '--addpkg <package1,package2,...>  Comma separated list of additional package names to install'
        echo '-C, --configs-path <path>         Path to directory configs'
        echo '                                  default: /usr/share/archiso/configs'
        echo '-l, --language <language>         Default language'
        echo '                                  cz, de, es, fr, gr, hu, it, nl, pl, pt, ro, rs, ru, tr, ua'
        echo '--nvidia                          Nvidia graphics driver'
        echo '--optimus                         Optimus hardware. Nvidia graphics driver and Xorg setup'
        echo '                                  for PRIME render offload'
        echo
        echo 'ISO config list:'
        echo 'console, cinnamon, deepin, gnome, kde, mate, xfce'
        echo
        echo 'Build example:'
        echo 'sudo aui-mkiso xfce'
        echo
        echo 'User customization. Duplicate an iso configurations to your working directory:'
        echo 'cp -LrT /usr/share/archiso/configs/<config> [path/]<config> 2> /dev/null'
        echo 'cp -rT /usr/share/archiso/aui [path/]<config>/aui'
        echo
        echo 'Example, xfce config copy, user home sub-directory sources:'
        echo 'cp -LrT /usr/share/archiso/configs/xfce ~/sources/xfce 2> /dev/null'
        echo 'cp -rT /usr/share/archiso/aui ~/sources/xfce/aui'
        echo
        echo 'Edit the packages files located in ~/sources/xfce and'
        echo '~/sources/xfce/lang'.
        echo
        echo 'Optionnally add your own pre-built AUR packages to ~/sources/xfce/pkglocal'
        echo
        echo 'To build your customized iso use the --configs-path command option:'
        echo 'sudo aui-mkiso xfce --configs-path ~/sources'
        echo
        echo "Desktop configuration specific help:"
        echo 'aui-mkiso <iso config> -h | --help'
        echo
        exit ${1}
}

OPTS=$(getopt -o 'A:C:D:L:N:P:V:c:g:hl:o:w:v' --long 'addpkg:,configs-path:,help,language:,nvidia,optimus' -n 'aui-mkiso' -- "$@")
[[ $? -eq 0 ]] || _usage 1
eval set -- "${OPTS}"
unset OPTS
[[ $# -eq 1 ]] && _usage 0

while true; do
        case "$1" in
                '--addpkg')
                        export AUI_ADDITIONALPKGS+="$(tr ',' ' ' <<< $2) "
                        shift 2 ;;
                '-C'|'--configs-path')
                        confdir="$2"
                        shift 2 ;;
                '-A'|'-D'|'-L'|'-N'|'-P'|'-V'|'-c'|'-g'|'-l'|'-o'|'-w')
                        options+="$1 $2 "
                        shift 2 ;;
                '-h'|'--help')
                        options="-h "
                        shift ;;
                '--language')
                        options+="-l $2 "
                        shift 2 ;;
                '--nvidia')
                        export AUI_ADDITIONALPKGS+="nvidia nvidia-settings bbswitch "
                        shift ;;
                '--optimus')
                        export AUI_ADDITIONALPKGS+="nvidia nvidia-settings nvidia-prime "
                        export AUI_OPTIMUS=1
                        shift ;;
                '-v')
                        options+="-v "
                        shift ;;
                '--')
                        shift
                        break ;;
        esac
done

if [[ $# -eq 0 && "${options}" =~ '-h' ]]; then
       _help 0
fi
if [[ $# -ne 1 ]]; then
       echo 'Error: invalid arguments!'
       _usage 1
fi

case $1 in
        cinnamon | console | deepin | gnome | kde | mate | xfce)
                config=$1 ;;
        *)
                _usage 1 ;;
esac

if [[ ! "${options}" =~ '-h' && ${EUID} -ne 0 ]]; then
        echo "This script must be run as root."
        echo
        echo "help:"
        echo "aui-mkiso -h"
        exit 1
fi

if [[ -d "work" ]]; then
        echo \'work\'' directory exists!'
fi

# Launch the build script:
eval "${confdir}/${config}/build.sh ${options}"

# vim: set expandtab:
